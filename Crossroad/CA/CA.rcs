PROGR ControlAlgorithm
{
	TACT 100;
	CONST OFF 0;
	CONST ON 1;
	CONST KCyclesDelay 150; /*15 sec*/
	CONST PCyclesDelay 200; /*20 sec*/
	/* direction, name, address, offset, size of the port */
	INPUT  LOG_CA_INPUT_PORT  0 0 8; /*car sensor input port*/
	OUTPUT LOG_CA_OUTPUT_PORT 1 0 8; /*output for switching*/

	PROC Init
	{
	LOG S_CAR_NEAR_CROSSROAD = {LOG_CA_INPUT_PORT[1]} FOR ALL;
	LOG C_SWITCH_TRAFFIC_LIGHT = {LOG_CA_OUTPUT_PORT[1]} FOR ALL;
 
		STATE Start
		{  
			C_SWITCH_TRAFFIC_LIGHT = OFF;
			SET NEXT;
		}	
		
		STATE SecondaryRoadControl
		{			
			IF(S_CAR_NEAR_CROSSROAD)
			{
				IF(PROC LightWorkCycle SET STATE PASSIVE)
				{
					START PROC LightWorkCycle;
				}
			}
			LOOP;
		}
	}/* \PROC */																	
	PROC LightWorkCycle
	{
	FROM PROC Init C_SWITCH_TRAFFIC_LIGHT;
		
		STATE PausePCycles
		{
			C_SWITCH_TRAFFIC_LIGHT = OFF;
			TIMEOUT PCyclesDelay SET NEXT;
		}
		
		STATE DisableMotionForKCycles
		{
			C_SWITCH_TRAFFIC_LIGHT = ON;
			TIMEOUT KCyclesDelay
			{	
				C_SWITCH_TRAFFIC_LIGHT = OFF;
				STOP;
			}
		}	
	}/* \PROC */
}/* \PROGRAM */
